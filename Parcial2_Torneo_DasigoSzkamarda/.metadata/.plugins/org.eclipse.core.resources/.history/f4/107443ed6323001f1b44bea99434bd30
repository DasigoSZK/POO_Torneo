package torneo;

import javax.swing.JOptionPane;

public class PeleadorConTecnica extends Peleador{

	private TecnicaEspecial tecnica;

	//----------------------------Constructor----------------------------
	public PeleadorConTecnica(String nombre, double puntosVida, double puntosVidaMax, double danoXsegundo, boolean tieneTecnicaEspecial,
			boolean puedeTransformarse, TecnicaEspecial tecnica) {
		super(nombre, puntosVida, puntosVidaMax, danoXsegundo, tieneTecnicaEspecial, puedeTransformarse);
		this.tecnica = tecnica;
	}
	public PeleadorConTecnica(String nombre, double puntosVida, double puntosVidaMax, double danoXsegundo, boolean tieneTecnicaEspecial,
			boolean puedeTransformarse) {
		super(nombre, puntosVida, puntosVidaMax, danoXsegundo, tieneTecnicaEspecial, puedeTransformarse);
		this.tecnica = new TecnicaEspecial("Bola de Energ√≠a", 100);
	}
	
	//----------------------------M√©todos----------------------------
	
	//Utiliza su t√©cnica especial en el contricante
	public void usarTecnica(Peleador adversario) {
		//El adversario es da√±ado por la t√©cnica
		adversario.setPuntosVida(adversario.getPuntosVida() - this.getTecnica().getDano());
	}
	
	//SOBRESCRIBE el m√©todo pelear pero con t√©cnica especial
	public Peleador[] pelear(Peleador contrincante) {
		
		boolean tecnica1 = false;
		boolean tecnica2 = false;
		boolean transformacionContrincante = false;
		
		
		//Array para guardar al ganador(pos 0) y al perdedor(pos 1)
		Peleador[] ganador_perdedor = new Peleador[2];
		String historialPelea = this.getNombre() + " VS " + contrincante.getNombre() + "\n";
		
		//Pelean hasta que uno se quede sin vida
		while(this.getPuntosVida() > 0 && contrincante.getPuntosVida() > 0) {
			
			//Peleador 1 golpea al Peleador 2
			if(this.getPuntosVida() > 0) {
				
				//Posibilidad de 20% de golpe cr√≠tico
				boolean golpeCritico = (int)(Math.random() * 10) < 2;
				
				//Si es golpe CR√çTICO
				if(golpeCritico) {
					
					//Golpea un 50% mas fuerte
					contrincante.setPuntosVida(contrincante.getPuntosVida() - (this.getDanoXsegundo() * 1.50));
					if(contrincante.getPuntosVida() < 0) contrincante.setPuntosVida(0);
					historialPelea += this.getNombre() + " lanza un golpe CR√çTICO"+ " (-" + (this.getDanoXsegundo() * 1.50) + " HP) "+ " a " 
							+ contrincante.getNombre() + " (" + contrincante.getPuntosVida() + "HP)\n";
					
				//Si es golpe NORMAL
				}else{		
					
					contrincante.setPuntosVida(contrincante.getPuntosVida() - this.getDanoXsegundo());
					if(contrincante.getPuntosVida() < 0) contrincante.setPuntosVida(0);
					historialPelea += this.getNombre() + " golpea"+ " (-" + this.getDanoXsegundo() + " HP) "+ " a " 
							+ contrincante.getNombre() + " (" + contrincante.getPuntosVida() + "HP)\n";
					
				}
				
			}
			
			//Peleador 2 golpea al Peleador 1
			if(contrincante.getPuntosVida() > 0) {				
				this.setPuntosVida(this.getPuntosVida() - contrincante.getDanoXsegundo());
				if(this.getPuntosVida() < 0) this.setPuntosVida(0);
				historialPelea += contrincante.getNombre() + " golpea"+ " (-" + contrincante.getDanoXsegundo() + " HP) "+ " a " 
						+ this.getNombre() + " (" + this.getPuntosVida() + "HP)\n";
			}
			
			//Si el contrincante puede transformarse y tiene menos de 800HP, se TRANSFORMA  
			if(contrincante.getPuntosVida() <= 800 && contrincante.isPuedeTransformarse() && !transformacionContrincante) {
				contrincante.transformarse();
				transformacionContrincante = true;
				historialPelea += "‚¨ÜÔ∏è‚¨ÜÔ∏è‚¨ÜÔ∏è‚¨ÜÔ∏è" + contrincante.getNombre() + " se transforma en " 
				+ contrincante.getTransformacion().getNombre() + "‚¨ÜÔ∏è‚¨ÜÔ∏è‚¨ÜÔ∏è‚¨ÜÔ∏è\n";
			}
			
			//Si tienen menos del 500HP, ejecutan sus T√âCNICAS ESPECIALES
			if(this.getPuntosVida() <= 500 && this.getPuntosVida() > 0 && !tecnica1) {
				this.usarTecnica(contrincante);
				if(contrincante.getPuntosVida() < 0) contrincante.setPuntosVida(0);
				tecnica1 = true;
				historialPelea += "üí£üí£üí£üí£" + this.getNombre() + " utiliza \"" + this.getTecnica().getNombre() + "\" sobre " + contrincante.getNombre() 
				+ " (-" + this.getTecnica().getDano() + "HP)" + "üí£üí£üí£üí£\n";
			}
			if(contrincante.getPuntosVida() <= 500 && contrincante.getPuntosVida() > 0 && contrincante.isTieneTecnicaEspecial() && !tecnica2) {
				contrincante.usarTecnica(this);
				if(this.getPuntosVida() < 0) this.setPuntosVida(0);
				tecnica2 = true;
				historialPelea += "üí£üí£üí£üí£" + contrincante.getNombre() + " utiliza \"" + contrincante.getTecnica().getNombre() + "\" sobre " + this.getNombre() 
				+ " (-" + contrincante.getTecnica().getDano() + "HP)" + "üí£üí£üí£üí£\n";
			}
		}
		
		//Vuelven a su estado base
		if(contrincante.isPuedeTransformarse() && transformacionContrincante) {
			contrincante.volverEstadoBase();
		}
		
		if(this.getPuntosVida() <= 0) {
			//Gana el contrincante
			ganador_perdedor[0] = contrincante;
			ganador_perdedor[1] = this;
			historialPelea += "‚ò†Ô∏è‚ò†Ô∏è‚ò†Ô∏è" + this.getNombre() + " ya no es capaz de seguir peleando‚ò†Ô∏è‚ò†Ô∏è‚ò†Ô∏è"
					+ "\n\n üéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏è  " + contrincante.getNombre() + " es el GANADOR  üéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏è";
		}else {
			//Gana el peleador actual
			ganador_perdedor[0] = this;
			ganador_perdedor[1] = contrincante;	
			historialPelea += "‚ò†Ô∏è‚ò†Ô∏è‚ò†Ô∏è" + contrincante.getNombre() + " ya no es capaz de seguir peleando‚ò†Ô∏è‚ò†Ô∏è‚ò†Ô∏è"
					+ "\n\n üéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏è  " + this.getNombre() + " es el GANADOR  üéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏èüéñÔ∏è";
		}
		
		JOptionPane.showMessageDialog(null, historialPelea);
		return ganador_perdedor;
		
	}
	
	//Vuelve a su estado base desde la transformaci√≥n
	public void volverEstadoBase() {}
	
	public TecnicaEspecial getTecnica() {
		return tecnica;
	}
	
	public void setTecnica(TecnicaEspecial tecnica) {
		this.tecnica = tecnica;
	}
	
	
}
